apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion propCompileSdkVersion

    defaultConfig {
        versionCode getGitCommitCount()
        versionName "1.0"

        minSdkVersion 17
        targetSdkVersion 29

        buildConfigField "String", 'GIT_USER', "\"" + getGitUser() + "\""
        buildConfigField "String", 'GIT_REPOSITORY', "\"" + getGitRepository() + "\""
    }

    packagingOptions {
        pickFirst 'META-INF/atomicfu.kotlin_module'
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

dependencies {
    implementation project(':githubAppUpdate')
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation 'com.google.android.material:material:1.2.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

static def getGitCommitCount() {
    def process = "git rev-list HEAD --count".execute()
    return process.text.toInteger()
}

static def getGitOriginRemote() {
    def process = "git remote -v".execute()
    def values = process.text.toString().trim().split("\\r\\n|\\n|\\r")

    def found = values.find { it.startsWith("origin") && it.endsWith("(push)") }
    return found.replace("origin", "").replace("(push)", "").replace(".git", "").trim()
}

static def getGitUser() {
    def token = getGitOriginRemote().split("/")
    return token[3]
}

static def getGitRepository() {
    def token = getGitOriginRemote().split("/")
    return token[4]
}
